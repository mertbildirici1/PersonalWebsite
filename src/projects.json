[
    {
      "name": "Vase, a Sharded KV Store on Kubernetes",
      "image": "https://github.com/kevin-fang/vase-a-sharded-kv-store-on-kubernetes/blob/main/pictures/cluster_diagram.png?raw=true",
      "priority": 0.9,
      "github": "https://github.com/kevin-fang/vase-a-sharded-kv-store-on-kubernetes",
      "summary": "A sharded, consistent and scalable key-value store running on Kubernetes based on etcd",
      "description": "Vase is a sharded, consistent and scalable key-value store based on the application etcd, running on Kubernetes. We used ReplicaSet scaling for the sharding service front-end, and StatefulSet scaling for the etcd key-value store backend. We scaled both the number of replicas and shards and benchmarked using a load generation service (locust.io), and we were able to demonstrate increased throughput, decreased latency, and improved tail latency."
    },
    {
      "name": "Reinforced Flappy Bird",
      "image": "https://raw.githubusercontent.com/kevin-fang/reinforced-flappy-bird/master/animation.gif",
      "link": "https://www.youtube.com/watch?v=PNE6KFNn1yY",
      "priority": 1.2,
      "github": "https://github.com/kevin-fang/reinforced-flappy-bird",
      "summary": "Play Flappy Bird with neural networks",
      "description": "For my final, independent CS project in high school, I used policy gradients to train a neural net to play Flappy Bird. The neural net read the state of a Flappy Bird game and would predict the optimal move (jump or fall). Based on results of the previous games, it would learn to make better predictions over time. After a few hundred iterations of training, the AI was able to play Flappy Bird without failing."
    }
  ]